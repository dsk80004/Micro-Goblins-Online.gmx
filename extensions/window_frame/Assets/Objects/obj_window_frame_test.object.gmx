<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>was_ready = false;
leaving = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_frame_update();
// if the extension just finished readying up:
if (window_frame_is_ready &amp;&amp; !was_ready) {
    was_ready = true;
    // override the close button behaviour, as an example:
    window_command_hook(window_command_close);
    //window_command_set_active(window_command_resize, 0); // can disable window resizing
    //window_command_set_active(window_command_maximize, 0); // or ability to maximize window
    //window_command_set_active(window_command_minimize, 0); // or ability to minimize window
    window_frame_set_min_size(224, 192); // how small the window can be allowed to get
    //window_frame_set_background(background_color); // if you don't fill the entire window
}

// if the close button was clicked (being overriden), close shortly:
if (window_command_check(window_command_close)) {
    leaving = 30;
}

// resize the game to fit the container window if it's visible
// (if you don't do window resizing, you don't need this)
if (window_frame_get_visible()) {
    var w = window_frame_get_width();
    var h = window_frame_get_height();
    if (w &gt; 0 &amp;&amp; h &gt; 0 &amp;&amp; surface_exists(application_surface)
    &amp;&amp; (window_get_width() != w || window_get_height() != h)
    ) {
        // resize room (since we don't use views):
        room_width = w; room_height = h;
        // resize the game inside the frame-window to fit it's size:
        window_frame_set_region(0, 0, w, h);
        // also resize application_surface:
        surface_resize(application_surface, w, h);
    }
}

/*if (keyboard_check_pressed(vk_space)) {
    var l = window_frame_get_x();
    var t = window_frame_get_y();
    var w = window_frame_get_width();
    var h = window_frame_get_height();
    show_debug_message(string(w)+" "+string(h));
    window_frame_set_rect(l+10,t+10,w,h);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message(json_encode(async_load));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_window_frame_test);
draw_set_color(c_white);
var s;
if (leaving &gt; 0) {
    s = "See you later!";
    if (--leaving &lt;= 0) game_end();
} else s = string_format(current_time / 1000, 0, 1) + "s"
    + "#Try things:"
    + "#1: Enable border"
    + "#2: Disable border"
    + "#3: Toggle fulscreen"
    + "#4: Minimize"
    + "#T: Toggle stay-on-top"
    + "#Size: " + string(window_get_width()) + "x" + string(window_get_height());
draw_text(0, 0, s);
if (keyboard_check_pressed(ord("1"))) window_frame_set_visible(true);
if (keyboard_check_pressed(ord("2"))) window_frame_set_visible(false);
if (keyboard_check_pressed(ord("3"))) window_frame_set_fullscreen(!window_get_fullscreen());
if (keyboard_check_pressed(ord("4"))) window_command_run(window_command_minimize);
if (keyboard_check_pressed(ord("T"))) window_set_topmost(!window_get_topmost());
draw_circle(mouse_x, mouse_y, 10, true);
if (gamepad_is_connected(0)) draw_line(mouse_x, mouse_y,
    mouse_x + gamepad_axis_value(0, gp_axislh) * 100,
    mouse_y + gamepad_axis_value(0, gp_axislv) * 100
);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
